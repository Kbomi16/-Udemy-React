{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimbo\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\udemy-react\\\\Section 4\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\";\nimport React from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  // function clickHandler() {}\n\n  // 컴포넌트 함수가 다시 호출되는 곳에서 변경된 값을 반영하기 위해 state로 값을 정의함.\n  // setState()는 컴포넌트의 state 객체에 대한 업데이트를 실행.\n  // useState();\n\n  // const [현재 값, 나중에 title을 설정하기 위한 함수(업데이트 값)]\n  // const [title, setTitle] = useState(props.title);\n  // console.log('ExpenseItem evaluated by React');\n\n  // const clickHandler = () => {\n  //   setTitle('Updated!');\n  //   console.log(title);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","ExpenseDate","Card","ExpenseItem","props","date","title","amount"],"sources":["C:/Users/kimbo/OneDrive/바탕 화면/udemy-react/Section 4/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  // function clickHandler() {}\n\n  // 컴포넌트 함수가 다시 호출되는 곳에서 변경된 값을 반영하기 위해 state로 값을 정의함.\n  // setState()는 컴포넌트의 state 객체에 대한 업데이트를 실행.\n  // useState();\n\n  // const [현재 값, 나중에 title을 설정하기 위한 함수(업데이트 값)]\n  // const [title, setTitle] = useState(props.title);\n  // console.log('ExpenseItem evaluated by React');\n  \n  // const clickHandler = () => {\n  //   setTitle('Updated!');\n  //   console.log(title);\n  // };\n\n  return (\n    <Card className='expense-item'>\n      {/* Date는 날짜(상수)여서 뒤에 toISOString을 붙임.(문자열로 출력) */}\n      {/* <div>{props.date.toISOString()}</div> */}\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n\n      {/* 모든 이벤트 핸들러 props는 함수가 필요함. */}\n      {/* <button onClick={clickHandler}>Change Title</button> */}\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,cAAc;IAAA,wBAG5B,QAAC,WAAW;MAAC,IAAI,EAAEA,KAAK,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACjC;MAAK,SAAS,EAAC,2BAA2B;MAAA,wBACxC;QAAA,UAAKD,KAAK,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACtB;QAAK,SAAS,EAAC,qBAAqB;QAAA,WAAC,GAAC,EAACF,KAAK,CAACG,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD;EAAA;IAAA;IAAA;IAAA;EAAA,QAID;AAEX,CAAC;AAAA,KA9BKJ,WAAW;AAgCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}