{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimbo\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\udemy-react\\\\Section 4\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  // const [enteredTitle, setEnteredTitle] = useState('');\n  // const [enteredAmount, setEnteredAmount] = useState('');\n  // const [enteredDate, setEnteredDate] = useState('');\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  });\n  const titleChangeHandler = event => {\n    // setEnteredTitle(event.target.value);\n    setUserInput({\n      // 스프레드 연산자\n      ...userInput,\n      enteredTitle: event.target.value\n    });\n  };\n  const amountChangeHandler = event => {\n    // setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   // 스프레드 연산자\n    //   ...userInput, \n    //   enteredAmount: event.target.value,\n    // })\n\n    // 동시에 수많은 상태 업데이트를 한다면 오래됐거나 잘못된 상태 스냅샷에 의존할 수 있음.\n    // 아래 방법은 항상 최신상태의 스냅샷을 유지함.(항상 계획된 상태 업데이트)\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredTitle: event.target.value\n      };\n    });\n  };\n  const dateChangeHandler = event => {\n    // setEnteredDate(event.target.value);\n    setUserInput({\n      // 스프레드 연산자\n      ...userInput,\n      enteredDate: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"ZhwevBNW5ZpKbE7HnFyD21j9sD8=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","event","target","value","amountChangeHandler","prevState","dateChangeHandler"],"sources":["C:/Users/kimbo/OneDrive/바탕 화면/udemy-react/Section 4/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {\r\n  // const [enteredTitle, setEnteredTitle] = useState('');\r\n  // const [enteredAmount, setEnteredAmount] = useState('');\r\n  // const [enteredDate, setEnteredDate] = useState('');\r\n  const [userInput, setUserInput] = useState ({\r\n    enteredTitle: '',\r\n    enteredAmount: '',\r\n    enteredDate : ''\r\n  });\r\n\r\n\r\n  const titleChangeHandler = (event) => {\r\n    // setEnteredTitle(event.target.value);\r\n    setUserInput({\r\n      // 스프레드 연산자\r\n      ...userInput, \r\n      enteredTitle: event.target.value,\r\n    })\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    // setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   // 스프레드 연산자\r\n    //   ...userInput, \r\n    //   enteredAmount: event.target.value,\r\n    // })\r\n  \r\n    // 동시에 수많은 상태 업데이트를 한다면 오래됐거나 잘못된 상태 스냅샷에 의존할 수 있음.\r\n    // 아래 방법은 항상 최신상태의 스냅샷을 유지함.(항상 계획된 상태 업데이트)\r\n    setUserInput((prevState) => {\r\n      return {...prevState, enteredTitle: event.target.value};\r\n    });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    // setEnteredDate(event.target.value);\r\n    setUserInput({\r\n      // 스프레드 연산자\r\n      ...userInput, \r\n      enteredDate: event.target.value,\r\n    })\r\n  };\r\n\r\n  return(\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type='text' onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type='number' min='0.01' step='0.01' onChange={amountChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type='date' min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler}/>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB;EACA;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAE;IAC1CI,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBC,WAAW,EAAG;EAChB,CAAC,CAAC;EAGF,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC;IACAL,YAAY,CAAC;MACX;MACA,GAAGD,SAAS;MACZE,YAAY,EAAEI,KAAK,CAACC,MAAM,CAACC;IAC7B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrC;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACAL,YAAY,CAAES,SAAS,IAAK;MAC1B,OAAO;QAAC,GAAGA,SAAS;QAAER,YAAY,EAAEI,KAAK,CAACC,MAAM,CAACC;MAAK,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACnC;IACAL,YAAY,CAAC;MACX;MACA,GAAGD,SAAS;MACZI,WAAW,EAAEE,KAAK,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,uBAAuB;MAAA,wBACpC;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA,UAAO;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpB;UAAO,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEH;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA,UAAO;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,eACrB;UAAO,IAAI,EAAC,QAAQ;UAAC,GAAG,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEI;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACxE,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA,UAAO;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,eACnB;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAC,YAAY;UAAC,GAAG,EAAC,YAAY;UAAC,QAAQ,EAAEE;QAAkB;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/E;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAEN;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACtC;EAAA;IAAA;IAAA;IAAA;EAAA,QAED;AAEX,CAAC;AAAA,GAnEKZ,WAAW;AAAA,KAAXA,WAAW;AAqEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}